---
title: "Starter Notebook"
author: "Suzan Taha"
format: html
execute:
  keep-md: true
---

```{r setup, include = FALSE}
#Load in any packages you need
library(tidyverse)

#Read in any data

```
### Challenge 1
In this block of code we are developing our four nucleotides, Adenine, Guanine, Cytosine, and Thymine and then proceeding to print them out into our notebook.
```{r}
nucleotides <- c("A","G","C", "T")
nucleotides
```
### Challenge 2
In this challenge we are giving our string a set number, in this case 15 so that our outcome is a random list of our nucleotides that is of length 15.
```{r}
randString <- 15

randGenome <- sample(nucleotides, size = randString, replace = TRUE)

randGenome
```
### Challenge 3
We are about to create another random string of length 1500. This string however is going to be collapsed into one large line of nucleotides rather than having quotation marks between each character. 
```{r}
randString2 <- 1500
randGenome2 <- sample(nucleotides, size =randString2, replace = TRUE)
randGenome2


paste(randGenome2, collapse = "")
```
### Challenge 4
In challenge 4 we are setting a seed of 215 to allow my group members and I to obtain the same 100 values within our nucleotides. 
```{r}
set.seed(215)

randString3 <- 100
randGenome3 <- sample(nucleotides, size = randString3, replace = TRUE)
randGenome3

randGenome3 <- paste(randGenome3, collapse = "")

```
### Challenge 5
In the code block below, we are learning how to use a for loop of 1 which will allow us to portray all 'j' values from 1 to 15. This is useful when we want to use the same chunck of code over and over again.
```{r}
myProduct <- 1

for(j in 1:15){
  myProduct <- myProduct + j
  print(myProduct)
}
```
### Challenge 6
We are about to use a randome genome of length 10 and execute a for loop to determine each individual nucleotide that is present.
```{r}
genomeLength <- 10

randGenome <- sample(nucleotides, size = genomeLength, replace = TRUE)

randGenome <- paste(randGenome, collapse = "")
randGenome

for(i in 1:10){
print(str_sub(randGenome, start=i, end= i))
}
```
### Challenge 7
We are about to use the same random genome as previously, however we are going to use a for loop and 'nchar' to give us the amount of Adenine's we have in our nucleotide as a number.
```{r}
randGenome
adeninecount <- 0
for(i in 1:nchar(randGenome)){
  if(str_sub(randGenome, start = i, end = i) == "A"){
    adeninecount <- adeninecount + 1
  }
}
print(adeninecount)
```
### Challenge 8
In challenge 8, we are going to us our same randome genome of length 10 to view how much of each base we have in our ten letter long nucleotide. 
```{r}
#Use this code chunk to complete Challenge 8
randGenome
adenine_count <- 0
cytosine_count <- 0
guanine_count <- 0
thymine_count <- 0
for(i in 1:nchar(randGenome)){
  if(str_sub(randGenome, start = i, end = i) == "A"){
    adenine_count <- adenine_count + 1
  }
  if(str_sub(randGenome, start = i, end = i) == "C"){
    cytosine_count <- cytosine_count + 1
  }
  if(str_sub(randGenome, start = i, end = i) == "G"){
    guanine_count <- guanine_count + 1
  }
  if(str_sub(randGenome, start = i, end = i) == "T"){
    thymine_count <- thymine_count + 1
  }
}
print(c(adenine_count,thymine_count,guanine_count, cytosine_count))
```
### Challenge 9
We are about to read in a file that contains an extensive amount of nucleotides so that we can work with a bigger genome. Then we are going to program r to give us the exact number of each nucleotide - A, C, G, T
```{r}
#Use this code chunk to complete Challenge 9
vib_c <- scan("~/GITHUB/BioStatisticsAnalysis/longgenome.txt", what = "character", sep = NULL)

vib_c
adenine_count2 <- 0
cytosine_count2 <- 0
guanine_count2 <- 0
thymine_count2 <- 0
for(i in 1:nchar(vib_c)){
  if(str_sub(vib_c, start = i, end = i) == "A"){
    adenine_count2 <- adenine_count2 + 1
  }
  if(str_sub(vib_c, start = i, end = i) == "C"){
    cytosine_count2 <- cytosine_count2 + 1
  }
  if(str_sub(vib_c, start = i, end = i) == "G"){
    guanine_count2 <- guanine_count2 + 1
  }
  if(str_sub(vib_c, start = i, end = i) == "T"){
    thymine_count2 <- thymine_count2 + 1
  }
}
print(c(adenine_count2,thymine_count2,guanine_count2, cytosine_count2))
```
Doing this, gave us an adenine count of 587,884 a thymine count of 589,422 a guanine count of 512,048, and a cytosine count of 527,146. 
### Challenge 10
We are about to use the rosalind dna to obtain a challenge genome and then proceed to depict how many of each nucleotide (A, C, G, or T) is stated.
```{r}
rosalind_dna <- scan("~/Desktop/rosalind_dna.txt", what = "character", sep = NULL)
adenine_count3 <- 0
cytosine_count3 <- 0
guanine_count3 <- 0
thymine_count3 <- 0
for(i in 1:nchar(rosalind_dna)){
  if(str_sub(rosalind_dna, start = i, end = i) == "A"){
    adenine_count3 <- adenine_count3 + 1
  }
  if(str_sub(rosalind_dna, start = i, end = i) == "C"){
    cytosine_count3 <- cytosine_count3 + 1
  }
  if(str_sub(rosalind_dna, start = i, end = i) == "G"){
    guanine_count3 <- guanine_count3 + 1
  }
  if(str_sub(rosalind_dna, start = i, end = i) == "T"){
    thymine_count3 <- thymine_count3 + 1
  }
}
print(c(adenine_count3,thymine_count3,guanine_count3, cytosine_count3))
```
We obtained a count of 222 Adenine, 199 Thymine, 219 Guanine, and 241 Cytosine.